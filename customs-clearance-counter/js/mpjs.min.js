/************************************************
 * htmlRazor({
 *      display : 'block',
 *      font : false, fontSize : '15px',
 *      colorTrue : false, color : '#000000',
 *      razor : false, razorLength : 200,
 *      title : false, titleLength : 55,
 *      screen : false, screenLength : { xl : 200, lg : 150, md : 100, sm : 50, }
 *  });
 ************************************************
 * dFlex(); dIFlex(); thisWidth(argument);
 * if thisWidth is not argument to return elem width
 * if thisHeight is not argument to return elem height
 * thisHeight(argument); rClass(remove-class);
 * addClass(add-class); show(); hide();
 ************************************************
 * var textRazor = document.getElementsById('class-text');
 * textRazor[i].htmlRazor({
 *  display : 'block',
 *      font : false,
 *      fontSize : '15px',
 *      colorTrue : false,
 *      color : '#000000',
 *      razor : false,
 *      razorLength : 200,
 *      title : false,
 *      titleLength : 55,
 *      screen : false,
 *      screenLength : {
 *          xl : 200,
 *          lg : 150,
 *          md : 100,
 *          sm : 50,
 *      }
 * });
 ***********************************************
 * slide.mrCarousel({
 *      interval: 3000,
 *      fade : true,
 *      fadeInterval : 200,
 *  }); create new carousel
 ***********************************************/
function returnFadeTime(t) {
    var e = parseInt(t);
    return isNaN(e) || e < 200 || void 0 === e || void 0 === e ? 200 : e
}

function carouselItemFade(t, e) {
    var i = returnFadeTime(e),
        n = {
            webkit: "-webkit-transition: all " + i + "ms linear;",
            moz: "-moz-transition: all " + i + "ms linear;",
            ms: "-ms-transition: all " + i + "ms linear;",
            opera: "-o-transition: all " + i + "ms linear;",
            normal: "transition: all " + i + "ms linear;"
        },
        r = "";
    for (var a in n) r += n[a];
    for (a = 0; a < t.length; a++) t[a].style.cssText += r
}

function fadeToOut(t, e) {
    setTimeout(function() {
        t.hide()
    }, e)
}

function addToClass(t, e) {
    setTimeout(function() {
        t.addClass("active")
    }, e)
}

function findSpace(t) {
    return !!t.lastIndexOf(" ")
}

function thisRazor(t, e) {
    if (t.length > e) {
        var i = t.substring(0, e),
            n = i.lastIndexOf(" ");
        return findSpace(i) && n > 0 ? i.substring(0, n) + "..." : i + "..."
    }
    return t
}

function myExpend(t, e) {
    for (var i in e)
        for (var n in t) i === n && (t[n] = e[i])
}

function rRazor(t, e) {
    var i = parseInt(e);
    if (!isNaN(i) && "number" == typeof i && i > 0) return thisRazor(t, i)
}

function parentHeight(t, e) {
    for (var i, n = 0; n < e.length; n++)
        if ("block" === e[n].style.display) {
            i = parseFloat(e[n].thisHeight());
            break
        }
    t.thisHeight(i)
}

function mrFirstSlide(t, e, i, n, r, a) {
    for (var s = returnFadeTime(a), o = 0; o < t.length; o++) o != i ? (t[o].removeClass("active"), r ? fadeToOut(t[o], s) : t[o].hide()) : (t[o].show(), r ? addToClass(t[o], 1) : t[o].addClass("active"));
    ++i === t.length && (i = 0), parentHeight(n, t), setTimeout(function() {
        mrFirstSlide(t, e, i, n, r, a)
    }, e)
}

function thisPluginRazor(t, e, i) {
    switch (t.title && !isNaN(parseInt(t.titleLength)) && parseInt(t.titleLength) > 0 && "number" == typeof parseInt(t.titleLength) && (e.title = thisRazor(i, t.titleLength)), t.razor && (t.screen ? window.innerWidth > 991 ? e.innerHTML = rRazor(i, t.screenLength.xl) : window.innerWidth >= 768 && window.innerWidth <= 991 ? e.innerHTML = rRazor(i, t.screenLength.lg) : window.innerWidth >= 575 && window.innerWidth <= 767 ? e.innerHTML = rRazor(i, t.screenLength.md) : window.innerWidth <= 574 && (e.innerHTML = rRazor(i, t.screenLength.sm)) : e.innerHTML = rRazor(i, t.razorLength)), t.font && (e.style.fontSize = t.fontSize), t.colorTrue && (e.style.color = t.color), t.display) {
        case "none":
            e.style.display = "none !important";
            break;
        case "block":
            e.style.display = "block !important";
            break;
        case "inline-block":
            e.style.display = "inline-block !important";
            break;
        case "flex":
            e.dFlex();
            break;
        case "inline-flex":
            e.dIFlex();
            break;
        case "table":
            e.style.display = "table !important";
            break;
        case "table-row":
            e.style.display = "table-row !important";
            break;
        case "table-cell":
            e.style.display = "table-cell !important";
            break;
        default:
            e.style.display = "block !important"
    }
}
Element.prototype.hide = function() {
    this.style.display = "none"
}, Element.prototype.show = function() {
    this.style.display = "block"
}, Element.prototype.addClass = function(t) {
    this.classList.add(t)
}, Element.prototype.removeClass = function(t) {
    this.classList.remove(t)
}, Element.prototype.thisHeight = function(t) {
    if ("number" != typeof t || isNaN(t)) {
        if ("string" == typeof t) this.style.height = t;
        else if (void 0 === t && void 0 === t) return parseFloat(this.clientHeight)
    } else this.style.height = t + "px"
}, Element.prototype.thisWidth = function(t) {
    if ("number" != typeof t || isNaN(t)) {
        if ("string" == typeof t) this.style.width = t;
        else if (void 0 === t && void 0 === t) return parseFloat(this.clientWidth)
    } else this.style.width = t + "px"
}, Element.prototype.dIFlex = function() {
    var t = this.style.cssText + "display: -webkit-inline-box !important; display: -ms-inline-flexbox !important; display: inline-flex !important;";
    this.style.cssText = t
}, Element.prototype.dFlex = function() {
    var t = this.style.cssText + "display : -webkit-box !important; display : -ms-flexbox !important; display : flex !important";
    this.style.cssText = t
}, Element.prototype.mrSlide = function(t) {
    var e = {
            interval: 3e3,
            fade: !0,
            fadeInterval: 200
        },
        i = this;
    myExpend(e, t);
    var n, r = parseInt(e.interval),
        a = i.children;
    e.fade && carouselItemFade(a, e.fadeInterval), n = isNaN(r) || r < 500 || void 0 === r || void 0 === r ? 3e3 : r, window.addEventListener("resize", function() {
        parentHeight(i, a)
    });
    mrFirstSlide(a, n, 0, i, e.fade, e.fadeInterval)
}, Element.prototype.htmlRazor = function(t) {
    var e, i = this,
        n = {
            display: "block",
            font: !1,
            fontSize: "15px",
            colorTrue: !1,
            color: "#000000",
            razor: !1,
            razorLength: 200,
            title: !1,
            titleLength: 55,
            screen: !1,
            screenLength: {
                xl: 200,
                lg: 150,
                md: 100,
                sm: 50
            }
        };
    i.hasAttribute("data-html-razor") ? e = i.getAttribute("data-html-razor") : (i.setAttribute("data-html-razor", i.innerHTML), e = i.getAttribute("data-html-razor")), myExpend(n, t), thisPluginRazor(n, i, e), window.addEventListener("resize", function() {
        thisPluginRazor(n, i, e)
    })
};